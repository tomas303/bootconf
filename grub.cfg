################################################################################
#                                                                              #
# Multiboot configuration USB stick (mainly boot from iso images)              #
#                                                                              #
################################################################################

# usb boot partition(here resides boot files, iso files)
set usbbootid="2e15ba36-6ceb-48e2-a46f-5543785b7fec"
# usb efi partition(boot efi files + UBCD files)
set usbefiid="B79E-CA9B"
# boot device path
set usbbootdev="/dev/disk/by-uuid/$usbbootid"
# efi and bood partitions in grub format
insmod search_fs_uuid
search --no-floppy --set=grubbootdev --fs-uuid $usbbootid
search --no-floppy --set=grubefidev --fs-uuid $usbefiid

insmod regexp

# function will create menu entry based on iso image file
# $1 - iso file
# $2 - linux parameters
# $3 - initrd parameters
function loopbackmenuentry {
    menuentry "$1" "$1" "$2" "$3" {
    	loopback loop $2
    	linux (loop)$3
    	initrd (loop)$4
    }
}

# menu entry for sparky based iso
# $1 - iso file
function menu_sparkylinux {
  lb_file="$1"
  lb_linux="/live/vmlinuz findiso=$lb_file boot=live live-config live-media-path=/live -- quiet splash"
  lb_initrd="/live/initrd.img"
  loopbackmenuentry "$lb_file" "$lb_linux" "$lb_initrd";
}

# menu entry for ubuntu based iso
# $1 - iso file
function menu_ubuntu {
  lb_file="$1"
  lb_linux="/casper/vmlinuz boot=casper iso-scan/filename=$lb_file noprompt noeject"
  lb_initrd="/casper/initrd"
  loopbackmenuentry "$lb_file" "$lb_linux" "$lb_initrd";
}

# menu entry for archlinux based iso
# $1 - iso file
function menu_archlinux {
  lb_file="$1"
  lb_linux="/arch/boot/x86_64/vmlinuz img_dev=$usbbootdev img_loop=$lb_file earlymodules=loop"
  lb_initrd="/arch/boot/intel_ucode.img (loop)/arch/boot/amd_ucode.img (loop)/arch/boot/x86_64/archiso.img"
  loopbackmenuentry "$lb_file" "$lb_linux" "$lb_initrd";
}

# menu entry for opensuse based iso
# $1 - iso file
function menu_openSUSE {
  lb_file="$1"
  lb_linux="/boot/x86_64/loader/linux iso-scan/filename=$lb_file splash=silent quiet root=live:CDLABEL=openSUSE_Tumbleweed_KDE_Live rd.live.image"
  lb_initrd="/boot/x86_64/loader/initrd"
  loopbackmenuentry "$lb_file" "$lb_linux" "$lb_initrd";
}

# this will generate menu based on decoding linux name from iso file name
submenu "-> Boot iso file" {
for isofile in $grubbootdev/boot/iso2/*.iso; do
  regexp --set=isoname "/boot/iso2/(.*)" "$isofile"
  regexp --set=distro "(\w+).*" "$isoname"
  #echo going to call menu_"$distro" "$isofile"
  #sleep 1
  eval menu_"$distro" "$isofile"
done
}

menuentry "Ultimate Boot CD v5.3.8(legacy from EFI partition)" {
# boot works only in legacy mode, files from UBCD are on EFI partition and
# syslinux bootloader is installed there
insmod chain
set root=($grubefidev)
chainloader +1
}

